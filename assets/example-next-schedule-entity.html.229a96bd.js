import{m as e,o,d as p,f as n,q as t,F as r,l as s,x as c}from"./app.ee0bf03b.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";var i="/assets/next-schedule-sensor.87198baf.png",u="/assets/next-schedule-flow.862dea60.png",d="/assets/next-schedule-entity.418ab6ec.png";const k={},h=n("h1",{id:"output-schedule-to-a-sensor-entity",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#output-schedule-to-a-sensor-entity","aria-hidden":"true"},"#"),s(" Output schedule to a sensor entity")],-1),g=s("This example was contributed by "),m={href:"https://github.com/oakhill87",target:"_blank",rel:"noopener noreferrer"},y=s("Stefan"),b=s("Note: Requires "),f={href:"https://github.com/zachowj/hass-node-red",target:"_blank",rel:"noopener noreferrer"},_=s("Node-RED Companion Integration"),v=s("."),w=c('<p><img src="'+i+'" alt="Sensor with timestamp and attributes"> <img src="'+u+`" alt="Sensor flow"></p><p>This JavaScript code snippet can be pasted into a Function-node. When connected to the schedule-output (3) from Best Save, it will loop through the array of available hours and find the next timestamp where a power saving schedule is initated.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> msg<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>hours<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>hours<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onOff <span class="token operator">!=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> schedule <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">time</span><span class="token operator">:</span> msg<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>hours<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span> <span class="token literal-property property">topic</span><span class="token operator">:</span> <span class="token string">&quot;Neste spareperiode&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">length</span><span class="token operator">:</span> msg<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>config<span class="token punctuation">.</span>maxHoursToSaveInSequence<span class="token punctuation">,</span> <span class="token literal-property property">savings</span><span class="token operator">:</span> msg<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>hours<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>saving<span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> schedule <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">topic</span><span class="token operator">:</span> <span class="token string">&quot;Ingen aksjoner&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">savings</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> schedule_array <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">upcoming</span><span class="token operator">:</span> schedule<span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>schedule_array<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>This will return the following:</p><ul><li>msg.upcoming.time = Timestamp if saving is scheduled - False if no schedule with the current available prices.</li><li>msg.upcoming.length = How long the next saving will last - set to 0 if no schedule.</li><li>msg.upcoming.savings = Estimated savings retrieved from the node.</li></ul><h2 id="setup" tabindex="-1"><a class="header-anchor" href="#setup" aria-hidden="true">#</a> Setup</h2><ol><li>Paste the code above into a Function node and connect it to the schedule output.</li><li>Create an entity node from the Node-RED Companion Integration, and configure it according to the steps below:</li></ol><p>The msg.topic is currently not used, but in case you&#39;d want to specify dynamic names in the sensor instead of in the frontend, go ahead and add them as attributes using the following configuration:</p><ol><li><strong>State</strong>: msg.upcoming.time</li><li>Attribute key <strong>Duration</strong>: msg.upcoming.length</li><li>Attribute key <strong>Savings</strong>: msg.upcoming.savings</li></ol><img src="`+d+'" width="25%"><h2 id="to-do" tabindex="-1"><a class="header-anchor" href="#to-do" aria-hidden="true">#</a> To-do</h2><p>If you find any bugs, let me know, but as long as the payload doesn&#39;t change it should work.</p>',12);function x(S,q){const a=e("ExternalLinkIcon");return o(),p(r,null,[h,n("p",null,[g,n("a",m,[y,t(a)])]),n("p",null,[b,n("a",f,[_,t(a)]),v]),w],64)}var E=l(k,[["render",x]]);export{E as default};
